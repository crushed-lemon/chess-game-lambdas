name: Deploy to Lambda

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: chess-connect-function
            lambda_name: chessConnect
          - module: chess-disconnect-function
            lambda_name: chessDisconnect
          - module: chess-request-game-function
            lambda_name: chessRequestGame

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 8 and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check Java Version
        run: java -version

      - name: Print JAVA_HOME
        run: echo $JAVA_HOME

      - name: Set up Maven
        run: mvn --version

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install maven

      - name: Set up Maven
        run: |
          mkdir -p ~/.m2
          echo "<settings> 
                  <servers> 
                    <server> 
                      <id>github</id> 
                      <username>crushed-lemon</username> 
                      <password>${GITHUB_TOKEN}</password> 
                    </server> 
                  </servers> 
                </settings>" > ~/.m2/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PKG_PAT }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-north-1'

      - name: Detect changes
        id: changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^${{ matrix.module }}/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and Deploy Lambda
        if: steps.changes.outputs.changed == 'true'
        run: |
          cd chess-lambda-commons
          mvn clean install
          cd ..
          cd ${{ matrix.module }}
          mvn clean package
          
          zip -j function.zip target/*.jar
          
          aws lambda update-function-code \
            --function-name ${{ matrix.lambda_name }} \
            --zip-file fileb://function.zip